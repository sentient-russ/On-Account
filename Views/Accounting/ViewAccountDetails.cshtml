@using oa.Models
@using oa.Services
@model IEnumerable<oa.Models.TransactionModel>
@{
    double runningBalance = 0; // Initialize running balance
    DbConnectorService dbConnection = new DbConnectorService();
    string normalSide = dbConnection.GetAccountNormalSideByNumber(ViewBag.AccountNumber);

}
<div class="text-center margin-top-120">
    @* <img src="~/img/balance_sheet.jpg" style="max-height: 150px;" /> *@
</div>
<h1 class="text-center mb-4">Account Details</h1>
<h3 class="text-center mb-4">Account Name: <span class="accent-color">@ViewBag.AccountName</span></h3>
<h3 class="text-center mb-4">Balance:<span class="accent-color"> @FormatNegativeDouble((double?)ViewBag.AccountBalance)</span></h3>
<h3 class="text-center mb-4">As of: <span class="accent-color">@ViewBag.Date</span></h3>

@* code here to remove button if the user is not admin or manager *@
<div class="search-row">
    <div class="search-colum-1">
    </div>
    <div class="search-colum-2">
        <img src="~/img/search.svg" class="search-img"  />
    </div>
    <div class="search-colum-3">
        <input type="text" id="searchInput" class="form-control mb-3" style="max-width:200px;" placeholder="Search...">
    </div>
</div>
<div class="table-wrapper">
<table class="table  table-striped">
    <thead class="table-top-row">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.journal_id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.debit_amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.credit_amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.transaction_date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.created_by)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.status)
            </th>
            <th>
                Balance
            </th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                <a asp-action="ViewJournalDetails" asp-route-id="@item.journal_id" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Redirects to the journal entry details.">
                    @Html.DisplayFor(modelItem => item.journal_id)
                </a>
                </td>
                    <td style ="text-align:right;">
                    @{
                        if(item.debit_amount != 0)
                        {
                            @FormatNegativeDouble(item.debit_amount)
                        }

                    }
                    
                </td>
                <td style="text-align:right;">@{
                        if(item.credit_amount != 0)
                        {
                            @FormatNegativeDouble(item.credit_amount)
                        }
                    }                    
                </td>
                <td>
                    @(item.transaction_date.HasValue ? item.transaction_date.Value.ToString("MM/dd/yyyy") : string.Empty)
                </td>
                    <td style="text-align:left;">
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.created_by)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td>
                    <td style="text-align:right; padding-right: 20px;">
                    @{
                        if(normalSide == "Debit")
                        {
                            runningBalance += item.debit_amount.GetValueOrDefault() - item.credit_amount.GetValueOrDefault();
                        } else if (normalSide == "Credit")
                        {
                            runningBalance += item.credit_amount.GetValueOrDefault() - item.debit_amount.GetValueOrDefault();
                        }
                        
                        @FormatNegativeDouble(runningBalance)
                    }
                </td>
            </tr>
        }
        <tr>
            <th ><strong>Totals</strong></th>
                <th><strong> <span class="accent-color">@FormatNegativeDouble((double?)ViewBag.TotalDebitAmount)</strong></span></th>
                <th><strong><span class="accent-color">@FormatNegativeDouble((double?)ViewBag.TotalCreditAmount)</strong></span></th>
            <th><strong></strong></th>

            <th><strong></strong></th>
            <th><strong></strong></th>
            <th><strong></strong></th>
                <th style ="text-align:right; padding-right:20px;"><strong><span class=" accent-color" ">@FormatNegativeDouble(runningBalance)</strong></span></th>
            
        </tr>

    </tbody>
</table>
</div>
@* format currency *@
@functions {
    public static string FormatNegativeDouble(double? value)
    {
        if (value.HasValue)
        {
            Console.WriteLine($"Formatting value: {value}"); // Debugging statement
            if (value < 0)
            {
                return $"({Math.Abs(value.Value).ToString("C")})";
            }
            return value.Value.ToString("C");
        }
        return string.Empty;
    }
}

@* Search and Filter *@
<script>
    document.getElementById('searchInput').addEventListener('keyup', function () {
        let input = this.value.toLowerCase();
        let rows = document.getElementById('tableBody').getElementsByTagName('tr');

        for (let i = 0; i < rows.length; i++) {
            let rowData = rows[i].getElementsByTagName('td');
            let match = false;

            for (let j = 0; j < rowData.length; j++) {
                if (rowData[j].innerText.toLowerCase().indexOf(input) > -1) {
                    match = true;
                    break;
                }
            }

            if (match) {
                rows[i].style.display = '';
            } else {
                rows[i].style.display = 'none';
            }
        }
    });
</script>