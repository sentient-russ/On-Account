@using oa.Models;
@model IEnumerable<oa.Models.TrialBalanceModel>

@{
    ViewData["Title"] = "viewTrialBalance";
    double runningBalance = 0;
    double totalDebit = 0;
    double totalCredit = 0;
}
<div class="text-center margin-top-120">
</div>
<h1 class="text-center mb-4">Trial Balance</h1>
<h3 class="text-center mb-4"> <span class="accent-color">@ViewBag.AccountName</span></h3>
<h3 class="text-center mb-4">As of: <span class="accent-color">@ViewBag.Date</span></h3>

<div class="table-wrapper margin-top-20">
    <table class="table table-striped">
        <thead class="table-top-row">
            <tr style="background-color: #fcb14f15; padding-left: 20px;">
                <th></th>
                <th style="text-align:left; font-weight: bold;">
                    @Html.DisplayNameFor(model => model.accountname)
                </th>
                <th></th>
                <th style="text-align:right; max-width: 100px; font-weight: bold;">
                    @Html.DisplayNameFor(model => model.debit)
                </th>
                <th style="text-align:right; max-width: 100px; font-weight: bold;">
                    @Html.DisplayNameFor(model => model.credit)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @{
                int counter = 1;
            }
            @foreach (var item in Model)
            {
                <tr style="padding-left: 20px;">
                    <td></td>
                    <td style="text-align:left;">
                        @item.accountname
                    </td>
                    <td></td>
                    <td style="text-align:right; max-width: 100px;">
                        @FormatNegativeDouble(item.debit)
                        @{
                            if (item.debit != 0)
                            {
                                runningBalance += item.debit.GetValueOrDefault();
                                totalDebit += item.debit.GetValueOrDefault();
                            }
                        }
                    </td>
                    <td style="text-align:right; max-width: 100px;">
                        @FormatNegativeDouble(item.credit)
                        @{
                            if (item.credit != 0)
                            {
                                runningBalance -= item.credit.GetValueOrDefault();
                                totalCredit += item.credit.GetValueOrDefault();
                            }
                        }
                    </td>
                    <td></td>
                </tr>
                @if (counter == Model.Count())
                {
                    <tr>
                        <td></td>
                        <td style="width:300px; padding-left:95%;"></td>
                        <td style="text-align:right; font-weight: bold;">Totals:</td>
                        <td style="text-align:right; max-width: 100px; font-weight: bold;">@FormatNegativeDouble((double?)totalDebit)</td>
                        <td style="text-align:right; max-width: 100px; font-weight: bold;">@FormatNegativeDouble((double?)totalCredit)</td>
                        <td></td>
                    </tr>
                }
                counter = counter + 1;
            }
        </tbody>
    </table>
</div>

@functions {
    public static string FormatNegativeDouble(double? value)
    {
        if (value.HasValue)
        {
            Console.WriteLine($"Formatting value: {value}");
            if (value < 0)
            {
                return $"({Math.Abs(value.Value).ToString("C")})";
            }
            return value.Value.ToString("C");
        }
        return string.Empty;
    }
}
@* Search and Filter *@
<script>
    document.getElementById('searchInput').addEventListener('keyup', function () {
        let input = this.value.toLowerCase();
        let rows = document.getElementById('tableBody').getElementsByTagName('tr');
        for (let i = 0; i < rows.length; i++) {
            let rowData = rows[i].getElementsByTagName('td');
            let match = false;
            for (let j = 0; j < rowData.length; j++) {
                if (rowData[j].innerText.toLowerCase().indexOf(input) > -1) {
                    match = true;
                    break;
                }
            }
            if (match) {
                rows[i].style.display = '';
            } else {
                rows[i].style.display = 'none';
            }
        }
    });
</script>