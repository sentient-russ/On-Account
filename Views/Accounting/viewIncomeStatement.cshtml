@model oa.Models.IncomeStatementBundle
@{
    ViewData["Title"] = "viewIncomeStatement";
    string? asOfDate = ViewBag.asOfDate;
    string lastClosingDate = ViewBag.lastClosingDate;
    int? RevenueCounter = 0;
    int? ExpenseCounter = 0;
}

<div class="text-center margin-top-120">
    <div data-print-marker="print-content">
        <h1 class="text-center mb-2"><span class="accent-color">@ViewBag.businessName</span></h1>
        <h2 class="text-center mb-2">Income Statement</h2>
        <h3 class="text-center mb-4">As of: <span class="accent-color">@ViewBag.titleDate </span></h3>
    </div>
</div>
<div class="date-container">
    <form class="row g-3" asp-controller="Accounting" asp-action="viewIncomeStatement" method="post">
        <div class="col-auto">
            <label for="date" class="mr-1 padding-top-3">As of Date:</label>
        </div>
        <div class="col-auto">
            <input type="date" class="form-control mr-1" id="fromDate" name="fromDate" value="@lastClosingDate" required>
        </div>
        <div class="col-auto">
            <input type="date" class="form-control mr-1" id="toDate" name="toDate" value="@asOfDate" required>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-outline-primary mb-2">Update Report</button>
        </div>
    </form>
    <div class="col-auto" style="padding-left: 5px;">
        <input type="button" class="btn btn-outline-primary mb-2" value="Print" onclick="printDiv('print-content')">
    </div>
</div>
<div data-print-marker="print-content">
    <div class="table-wrapper">
        <table class="table table-striped">
            <thead class="table-top-row">
                <tr style="background-color: #fcb14f15; padding-left: 20px;">
                    <th style="text-align:left; padding-left: 100px;  font-weight: bold;">
                        Account:
                    </th>
                    <th style="width:60%"></th>
                    <th style="text-align:right; font-weight: bold;">
                        <span style="padding: 30px;">Amount:</span><span style="padding-right:45px;"">Total:</span>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td style="text-align:left; padding-left: 40px; font-weight:600; font-size:15px;">Revenues</td>
                    <td></td>
                    <td></td>
                </tr>
                @foreach (var item in Model.RevenueAccountsList)
                {
                    @if (item.type.Equals("Revenue"))
                    {
                        <tr>
                            <td style="text-align:left;padding-left: 80px;">
                                @Html.DisplayFor(modelItem => item.name)
                            </td>
                            <td></td>
                            <td style="text-align:right;padding-right: 120px;">
                                @FormatNegativeDouble(((double)item.current_balance))
                            </td>
                        </tr>
                        RevenueCounter++;
                    }
                    @if (RevenueCounter == Model.RevenueAccountsList.Count)
                    {
                        <tr>
                            <td style="text-align:left;padding-left: 40px; font-weight:600; font-size:15px; padding-top:10px;">Total Revenues:</td>
                            <td></td>
                            <td style="text-align:right;padding-right:40px"><div class="top-border"><br><span class="total-text">@FormatNegativeDouble(Model.RevenueAccountsTotal)</span></div></td>
                        </tr>
                    }
                }
                <tr>
                    <td style="text-align:left;padding-left: 40px; font-weight:600; font-size:15px;">Expenses</td>
                    <td></td>
                    <td></td>
                </tr>
                @foreach (var item in Model.ExpenseAccountsList)
                {
                    @if (item.type.Equals("Expense") && item.current_balance != 0)
                    {
                        <tr>
                            <td style="text-align:left;padding-left: 80px;">
                                @Html.DisplayFor(modelItem => item.name)
                            </td>
                            <td></td>
                            <td style="text-align:right;padding-right: 120px;">
                                @FormatNegativeDouble(((double)item.current_balance))
                            </td>
                        </tr>
                        ExpenseCounter++;
                    }
                    @if (ExpenseCounter == Model.ExpenseAccountsList.Count)
                    {
                        <tr>
                            <td style="text-align:left;padding-left: 40px; font-weight:600; font-size:15px; padding-top:10px;">Total Expenses:</td>
                            <td></td>
                            <td style="text-align:right;padding-right:40px"><div class="top-border"><span class="total-text">@FormatNegativeDouble(Model.ExxpenseAccountsTotal)</span></div></td>
                        </tr>
                    }
                }
                <tr>
                    <td style="text-align:left;padding-left: 40px; font-weight:600; font-size:15px;">Net Income (Loss) </td>
                    <td></td>
                    <td style="text-align:right;padding-right:40px"><div class="top-border"></div><span class="total-text">@FormatNegativeDouble(Model.Net)</span><div class="top-border"><br><div class="top-border"><br></div></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@functions {
    public static string FormatNegativeDouble(double? value)
    {
        if (value.HasValue)
        {
            Console.WriteLine($"Formatting value: {value}");
            if (value < 0)
            {
                return $"({Math.Abs(value.Value).ToString("C")})";
            }
            return value.Value.ToString("C");
        }
        return string.Empty;
    }
}