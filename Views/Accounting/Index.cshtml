@using Microsoft.AspNetCore.Identity
@using oa.Areas.Identity.Data
@using oa.Services
@using oa.Models
@inject UserManager<AppUser> UserManager

@{
    string? userid = UserManager.GetUserId(User);
    string? role = "";
    if (userid != null)
    {
        DbConnectorService dbServ = new DbConnectorService();
        AppUserModel user = dbServ.GetUserDetailsById(userid);
        role = user.UserRole;
    }
    int journalCount = 0;
    if (ViewBag.pendingJournalCount != null)
    {
       journalCount = ViewBag.pendingJournalCount;
    } 

    string journalCountStr = journalCount.ToString();
    string journalMessage = $"There are {journalCountStr} pending journal entries!";
    // Revenue and expense chart
    List<string> monthsList = new List<string>();
    List<string> expensesList = new List<string>();
    List<string> revenuesList = new List<string>();
    for (var i = 0; i < Model.IEMonths.Count; i++)
    {
        monthsList.Add(Model.IEMonths[i].monthName);
        expensesList.Add(Model.IEMonths[i].enpensesTotal.ToString());
        revenuesList.Add(Model.IEMonths[i].revenueTotal.ToString());
    }
    string[] monthsArray = monthsList.ToArray();
    string[] expenses = expensesList.ToArray();
    string[] revenues = revenuesList.ToArray();
    // Top 5 Expense Chart
    List<string> accountDescriptionsList = new List<string>();
    List<string> accountAmountsList = new List<string>();
    var node = Model.Top5List.First; // Start from the first node
    for (var i = 0; i < Model.Top5List.Count; i++)
    {
        if (node != null)
        {
            string desc = node.Value.accountNum.ToString() + " - " + node.Value.accountDesc;
            accountDescriptionsList.Add(desc);
            accountAmountsList.Add(node.Value.accountAmount.ToString());
            node = node.Next; // Move to the next node
        }
    }
    string[] descripts = accountDescriptionsList.ToArray();
    string[] amnts = accountAmountsList.ToArray();
    string[] firstFiveElementDesc = new string[5];
    string[] firstFiveElementAmnt = new string[5];

    Array.Copy(descripts, firstFiveElementDesc, 5);
    Array.Copy(amnts, firstFiveElementAmnt, 5);
}

<h1 class="text-center margin-top-120">Accounting Home</h1>
<p class="text-center">Welcome @UserManager.GetUserName(User)!</p>
<p class="text-center">Your current role is: @role</p>
@{
    if (journalCount > 0)
    {
                            <p class="text-center txt-warning">@journalMessage</p>
    }
}
<hr />
<partial name="_DashboardPartial" />
<hr />
<div class="chart-container">
    <div class="chart-col-2">
        <canvas id="BarChart-1" height="325" width="500"></canvas>
    </div>
    <div class="chart-col-3">
        <div class="donut-chart-container">
            <canvas id="DonutChart-1" height="325" width="500"></canvas>
        </div>

    </div>
</div>
<hr />
<div class="outer-container">
    <div class="container-row">
        <div class="btn-container">
            <div class="btn-row">
                <a class="nav-link text-dark" asp-controller="Accounting" asp-action="AddJounalEntries" data - bs - toggle="tooltip" data - bs - placement="bottom" data - bs - title="Journal entry page"><img class="btn-img" src="~/img/journal.jpg" /></a>
            </div>
            <div class="btn-row">
                <span class="btn-label">Journal Entry</span>
            </div>
        </div>
        <div class="btn-container">
            <div class="btn-row">
                <a class="nav-link text-dark" asp-controller="Accounting" asp-action="ChartOfAccounts" data - bs - toggle="tooltip" data - bs - placement="bottom" data - bs - title="Chart of Accounts page"><img class="btn-img" width="150" src="~/img/chart_of_accounts.jpg" /></a>
            </div>
            <div class="btn-row">
                <span class="btn-label">Chart of Accounts</span>
            </div>
        </div>
    </div>
    <hr />
    <div class="container-row">
        <div class="btn-container">
            <div class="btn-row">
                <a class="nav-link text-dark" asp-controller="Accounting" asp-action="viewIncomeStatement" data - bs - toggle="tooltip" data - bs - placement="bottom" data - bs - title="View the Income Statement"><img class="btn-img" width="150" src="~/img/income_statement.jpg" /></a>
            </div>
            <div class="btn-row">
                <span class="btn-label">Income Statement</span>
            </div>
        </div>

        <div class="btn-container">
            <div class="btn-row">
                <a class="nav-link text-dark" asp-controller="Accounting" asp-action="viewBalanceSheet" data - bs - toggle="tooltip" data - bs - placement="bottom" data - bs - title="View the Balance Sheet"><img class="btn-img" width="150" src="~/img/balance_sheet.jpg" /></a>
            </div>
            <div class="btn-row">
                <span class="btn-label">Balance Sheet</span>
            </div>
        </div>
        <div class="btn-container">
            <div class="btn-row">
                <a class="nav-link text-dark" asp-controller="Accounting" asp-action="viewTrialBalance" data - bs - toggle="tooltip" data - bs - placement="bottom" data - bs - title="View the Trial balance"><img class="btn-img" width="150" src="~/img/trial_balance.jpg" /></a>
            </div>
            <div class="btn-row">
                <span class="btn-label">Trial Balance</span>
            </div>
        </div>
        <div class="btn-container">
            <div class="btn-row">
                <a class="nav-link text-dark" asp-controller="Accounting" asp-action="viewOwnersEquity" data - bs - toggle="tooltip" data - bs - placement="bottom" data - bs - title="View the equity"><img class="btn-img" width="150" src="~/img/equity.jpg" /></a>
            </div>
            <div class="btn-row">
                <span class="btn-label">Owners Equity</span>
            </div>
        </div>

    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const colors = [
        'rgba(25, 135, 84, 0.5)', // green, income
        'rgba(91, 25, 135, 0.5)', // purple, expenses
        'rgba(25, 109, 135, 0.5)', // blue
        'rgba(135, 86, 25, 0.5)', // brown
        'rgba(135, 25, 25, 0.5)' // red
    ];
    const ctx1 = document.getElementById('BarChart-1');
    new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(monthsArray)),
            datasets: [{
                label: 'Income',
                data: @Html.Raw(Json.Serialize(revenues)),
                backgroundColor: colors[0],
                borderColor: 'rgba(25, 135, 84, 1)',
                borderWidth: 1
            },
            {
                label: 'Expenses',
                data: @Html.Raw(Json.Serialize(expenses)),
                backgroundColor: colors[1],
                borderColor: 'rgba(91, 25, 135, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            plugins: {
                title: {
                    display: true,
                    text: 'Income and Expenses',
                    font: {
                        size: 18,
                        weight: 'bold'
                    }
                }
            },
            responsive: false,

        }
    });
    const ctx2 = document.getElementById('DonutChart-1').getContext('2d');
    new Chart(ctx2, {
        type: 'doughnut',
        data: {
            labels: @Html.Raw(Json.Serialize(firstFiveElementDesc)),
            datasets: [{
                label: 'Expenses',
                data: @Html.Raw(Json.Serialize(firstFiveElementAmnt)),
                backgroundColor: colors,
                hoverOffset: 2,
                radius: 100
            }]
        },
        options: {
            layout:{
                padding:{
                    left: 25
                }
            },
            plugins: {
                title: {
                    display: true,
                    text: 'Top 5 Expenses',
                    position: 'top',
                    align: 'start',
                    font: {
                        size: 18,
                        weight: 'bold'
                    },
                    padding: {
                        top: 30,
                        left: 50
                    }
                    
                },
                legend: {
                    display: true,
                    position: 'right',
                    align: 'start',
                    labels: {
                        boxWidth: 10,
                        padding: 5
                                                    
                    },
                    padding:{
                        top: 10
                    }
                }
            },
            responsive: true
        }
    });
</script>