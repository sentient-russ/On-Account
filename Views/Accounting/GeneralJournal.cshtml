@model IEnumerable<oa.Models.TransactionModel>
@using oa.Services
@using oa.Models

@inject UserService CurrentUser

@{
    AppUserModel currentUser = CurrentUser.GetUser();
    var UsersEmail = currentUser.Email;
    var UserName = currentUser.ScreenName;
}

@{
    int currentJournalNumber = 0;
    double runningBalance = 0; // Initialize running balance
    DbConnectorService db = new DbConnectorService();
    List<TransactionModel> transactions = db.GetAllTransactions();
    List<JournalStringConcatenator.JournalString> journalStrings = new List<JournalStringConcatenator.JournalString>();
    for(int i = 0; i< transactions.Count; i++)
    {
        JournalStringConcatenator.JournalString journalString = new JournalStringConcatenator.JournalString();
        journalString.JournalId = transactions[i].journal_id;
        journalString.concatenatedString = transactions[i].ConcatenateValues();
        journalStrings.Add(journalString);
    }
    JournalStringConcatenator processor = new JournalStringConcatenator();
    List<JournalStringConcatenator.JournalString> combinedJournalStrings = processor.CombineJournalStrings(journalStrings);
    //retreives amounts for searching.
    List<JournalBundle> journalsWithTotals = new List<JournalBundle>();
    journalsWithTotals = db.GetJournalTotals();
}
@functions {
    public string GetFirstDayOfYear()
    {
        int currentYear = DateTime.Now.Year;
        DateTime firstDayOfYear = new DateTime(currentYear, 1, 1);
        return firstDayOfYear.ToString("MM/dd/yyyy");
    }

    public string GetCurrentDay()
    {
        return DateTime.Now.ToString("MM/dd/yyyy");
    }
}
<div class="text-center margin-top-120">
    <img src="~/img/chart_of_accounts.jpg" style="max-height: 150px;" />
</div>
<h1 class="text-center mb-4">General Journal</h1>
<div class="search-row">
    <div class="search-colum-1">
        @if (User.IsInRole("Accountant") || User.IsInRole("Manager"))
        {
            <a class="btn btn-primary" style="white-space: nowrap; max-height:37.5px; min-width: fit-content; padding-top:5px; font-size:16px;" asp-action="AddJounalEntries" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Add account page to create a new journal entry.">Add Entry</a>
        }
    </div>
    <div class="search-colum-2">
    </div>
    <div class="search-colum-1">            
    </div>
    <div class="search-colum-1">            
    </div>
    <div class="search-colum-1">            
    </div>
    <div class="search-colum-3">
        <img src="~/img/search.svg" class="search-img" text-align:right;" />
        <input type="text" id="searchInput" class="form-control mb-3" style="max-width:200px;" placeholder="Search...">

        <div class="btn-group">
            <button class="btn btn-outline-primary dropdown-toggle search-row-btn" type="button" data-bs-toggle="dropdown" aria-expanded="false" data-bs-placement="bottom" data-bs-title="Select the status that your would like to view.">
                <img style="max-height:25px; padding-right: 5px; padding-bottom: 3px; " src="~/img/filter-right.svg" />Status
            </button>
            <ul class="dropdown-menu dropdown-menu-end text-center">
                <li><a class="dropdown-item" href="#">Show All</a></li>
                <li><a class="dropdown-item" href="#">Pending</a></li>
                <li><a class="dropdown-item" href="#">Approved</a></li>
                <li><a class="dropdown-item" href="#">Denied</a></li>
            </ul>
        </div>
        <div class="dropdown">
            <button type="button" class="btn btn-outline-primary search-row-btn dropdown-toggle" data-bs-toggle="dropdown"  id="find-date-range-btn" aria-expanded="false" data-bs-auto-close="outside">
                <img style="max-height:25px; padding-right: 5px; padding-bottom: 3px;" src="~/img/filter-right.svg" />By Date
            </button>
            <form class="dropdown-menu dropdown-menu-end p-4 text-center">
                <div class="mb-3">
                    <label for="startDateDropdownForm" class="form-label">Beginning Date</label>
                    <input type="date" class="form-control" id="startDateDropdownForm" value="@GetFirstDayOfYear()">
                </div>
                <div class="mb-3">
                    <label for="endDateDropdownForm" class="form-label">Ending Date</label>
                    <input type="date" class="form-control" id="endDateDropdownForm" value="@GetCurrentDay()">
                </div>
                <button type="submit" class="btn btn-primary" id="getDateRangeButton">Get Dates</button>
            </form>
        </div>
        <div class="dropdown">
            <button type="button" class="btn btn-outline-primary search-row-btn dropdown-toggle" id="find-amount-range-btn" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside">
                <img style="max-height:25px; padding-right: 5px; padding-bottom: 3px; " src="~/img/filter-right.svg" />By Amount
            </button>
            <form class="dropdown-menu dropdown-menu-end p-4 text-center" style="min-width: 178px;">
                <div class="mb-3">
                    <label for="startAmountDropdownForm" class="form-label">Beginning Amount</label>
                    <input type="text" class="form-control currencyField" id="startAmountDropdownForm" style="text-align:right;" value="$0.00">
                </div>
                <div class="mb-3">
                    <label for="endAmountDropdownForm" class="form-label">Ending Amount</label>
                    <input type="text" class="form-control currencyField" id="endAmountDropdownForm" style="text-align:right;" value=" $0.00">
                </div>
                <button type="submit" class="btn btn-primary" id="getAmountRangeButton">Get Amounts</button>
            </form>
        </div>
        <div class="btn-group">
            <button id="resetTableButton" class="btn btn-primary search-row-btn">Reset Table</button>
        </div>        
    </div>
</div>
<div class="table-wrapper">
<table class="table-striped">
    <thead class="table-top-row">
        <tr>
            <th hidden>
               This row is in place to allow data gathering for multi-row search.
            </th>
            <th id="jid-column">
                @Html.DisplayNameFor(model => model.journal_id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.transaction_date)
            </th>
            <th>
                Account
            </th>
            <th>
                @Html.DisplayNameFor(model => model.debit_amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.credit_amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.created_by)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.journal_date)
            </th>
            <th style="margin-right: 50px;">
                @Html.DisplayNameFor(model => model.status)
            </th>
            <th>
                Actions:
            </th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @{
            var currentJournalId = 9999999999999999;
            var currentColorClass = "light-row";
                var divider1 = "border-top: 2px solid black;";
                var divider2 = "border-top: .5px solid #bdbdbd;";
            var transactionsCount = Model.Count();
            var instertedRowsCount = 0;
            
        }
        @foreach (var item in Model)
        {
            if (item.journal_id != currentJournalId)
            {
                if (currentColorClass == "dark-row")
                {
                    currentColorClass = "light-row";
                }
                else
                {
                    currentColorClass = "dark-row";
                }
            }
                 @* this inserts the total row before for the previouse journal before continuing the the current or next journal record *@
                 @if (item.journal_id != currentJournalId && currentJournalId != 9999999999999999)
                 {
                     <tr class="general-journal-total-row" style="border-top: .5px solid #bdbdbd; width:100%;" data-journal-id="@currentJournalId">
                        <td class="text-center" hidden>
                            @combinedJournalStrings.FirstOrDefault(js => js.JournalId == item.journal_id)?.concatenatedString

                        </td>
                        <td id="transaction-date" hidden>
                            @if (item.journal_id != currentJournalId)
                            {
                                @Html.DisplayFor(modelItem => item.transaction_date)
                            }
                        </td>
                        <td id="transaction-date" hidden>
                            @if (item.journal_id != currentJournalId)
                            {
                                @Html.DisplayFor(modelItem => item.transaction_date)
                            }
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                       <td style="text-align:right;  font-weight:600; transform:translateX(50px);">Total: </td>
                        <td id="transaction-amount" style="text-align:right; padding-right: 90px;">
                             @{
                                 var totalAmount = journalsWithTotals.FirstOrDefault(j => j.journal_id == currentJournalId);

                             }
                             @if (totalAmount != null)
                             {
                                 @totalAmount.total_adjustment?.ToString("C")
                             }
                         </td>                        
                     </tr>
                 }
                @* this makes sure that the first row of any new transaction is formated with a heavy top border *@
                <tr class="@currentColorClass" style="@(item.journal_id != currentJournalId ? divider1 : divider2)" data-journal-id="@item.journal_id">
                <td class="text-center" hidden>
                    @combinedJournalStrings.FirstOrDefault(js => js.JournalId == item.journal_id)?.concatenatedString

                </td>
                <td class="text-center" style="opacity: .85;">
                    @if (item.journal_id != currentJournalId)
                    {
                        <a asp-action="ViewJournalDetails" asp-route-id="@item.journal_id" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Redirects to the journal entry details.">
                            @Html.DisplayFor(modelItem => item.journal_id)
                        </a>
                    }
                </td>
                <td id="transaction-date">
                    @if (item.journal_id != currentJournalId)
                    {
                        @Html.DisplayFor(modelItem => item.transaction_date)
                    }
                </td>
                    <td style="text-align:left; opacity: .85;">
                    <a asp-action="ViewAccountDetails" asp-route-id="@item.debit_account" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Redirects to the accounts details.">
                        @Html.DisplayFor(modelItem => item.dr_description)
                    </a>
                    <a asp-action="ViewAccountDetails" asp-route-id="@item.credit_account" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Redirects to the accounts details.">
                        @Html.DisplayFor(modelItem => item.cr_description)
                    </a>
                </td>
                <td style ="text-align:right;">
                    @FormatNegativeDouble(item.debit_amount)
                </td>
                <td style ="text-align:right;">
                    @FormatNegativeDouble(item.credit_amount)
                </td>
                    <td style="text-align:left; color: rgba(0,0,0,.4);">
                    @if (item.journal_id != currentJournalId)
                    {
                        @Html.DisplayFor(modelItem => item.description)
                    }
                </td>
                    <td style=" color: rgba(0,0,0,.4)">
                    @if (item.journal_id != currentJournalId)
                    {
                        @Html.DisplayFor(modelItem => item.created_by)
                    }
                </td>
                <td>
                    @if (item.journal_id != currentJournalId)
                    {
                        @Html.DisplayFor(modelItem => item.journal_date)
                    }
                </td>
                <td>
                    @if (item.journal_id != currentJournalId)
                    {
                        <div class="status-container">
                            <div class="status-sub-container-name">
                                <div class="status-text-background">
                                    @Html.DisplayFor(modelItem => item.status)
                                </div>
                            </div>
                            <div class="status-sub-container-symbol">
                            @if (item.status == "Pending")
                            {
                                <div class="status-signifier-background">
                                    <img class="status-signifier-img" src="~/img/blue_question.svg" />
                                </div>
                            }
                            else if (item.status == "Approved")
                            {
                                <div class="status-signifier-background">
                                    <img class="status-signifier-img" src="~/img/green_check.svg" />
                                </div>
                            }
                            else
                            {
                                <div class="status-signifier-background">
                                    <img class="status-signifier-img" style="margin-left:2.5px;" src="~/img/red_x.svg" />
                                </div>
                            }
                            </div>
                        </div>
                    }
                </td>
                @if (User.IsInRole("Manager") && item.journal_id != currentJournalId)
                {
                    <td style="min-width: 225px; margin-right: 20px;">
                        @if (item.journal_id != currentJournalId)
                        {
                            <a class="btn btn-outline-primary btn-table-margin" asp-action="ViewJournalDetails" asp-route-id="@item.journal_id" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Display journal details">Details</a>
                            <a class="btn btn-outline-secondary btn-table-margin" asp-action="ApproveJournal" asp-route-id="@item.journal_id" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Approve to add the journal to the ledger.">Approve</a>
                            @*<a class="btn btn-outline-danger btn-table-margin" asp-action="DenyJournal" asp-route-id="@item.journal_id" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Deny to keep the journal of the ledger.">Deny</a>*@
                            <button type="button" class="btn btn-outline-danger btn-table-margin" data-bs-toggle="modal" data-bs-target="#denyModal" data-bs-journalid="@item.journal_id" data-bs-journaldesc="@item.description" data-bs-screenname="">Deny</button>
                            }
                    </td>
                }
                else if (item.journal_id != currentJournalId)
                {
                    <td style="min-width: 70px; margin-right: 40px;">
                        <a class="btn btn-outline-primary btn-table-margin" asp-action="ViewJournalDetails" asp-route-id="@item.journal_id" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Display journal details">Details</a>
                    </td>
                } else
                {
                    <td></td>
                }
                    @{
                        currentJournalId = (int)item.journal_id;
                        instertedRowsCount++;
                    }
          </tr>

                @* this inserts the total row before for the previouse journal before continuing the the current or next journal record *@
                @if (instertedRowsCount == transactionsCount)
                {
                    <tr class="general-journal-total-row" style="border-top: .5px solid #bdbdbd; width:100%;border-bottom: 1px solid black;" data-journal-id="@currentJournalId">
                        <td class="text-center" hidden>
                            @combinedJournalStrings.FirstOrDefault(js => js.JournalId == item.journal_id)?.concatenatedString

                        </td>
                        <td id="transaction-date" hidden>
                            @if (item.journal_id != currentJournalId)
                            {
                                @Html.DisplayFor(modelItem => item.transaction_date)
                            }
                        </td>
                        <td id="transaction-date" hidden>
                            @if (item.journal_id != currentJournalId)
                            {
                                @Html.DisplayFor(modelItem => item.transaction_date)
                            }
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        
                        <td style="text-align:right;  font-weight:600; transform:translateX(50px);">Total: </td>
                        <td id="transaction-amount" style="text-align:right; padding-right: 90px;">
                            @{
                                var totalAmount = journalsWithTotals.FirstOrDefault(j => j.journal_id == currentJournalId);

                            }
                            @if (totalAmount != null)
                            {
                                @totalAmount.total_adjustment?.ToString("C")
                            }
                        </td>
                       
                        
                    </tr>
                }
        }
    </tbody>
</table>
</div>
@* format currency *@
@functions {
    public static string FormatNegativeDouble(double? value)
    {
        if (value.HasValue)
        {
            Console.WriteLine($"Formatting value: {value}");
            if (value < 0)
            {
                return $"({Math.Abs(value.Value).ToString("C")})";
            }
            return value.Value.ToString("C");
        }
        return string.Empty;
    }
}
@* Search and Filter *@
<script>
    document.getElementById('searchInput').addEventListener('keyup', function () {
        let input = this.value.toLowerCase();
        let rows = document.getElementById('tableBody').getElementsByTagName('tr');

        for (let i = 0; i < rows.length; i++) {
            let rowData = rows[i].getElementsByTagName('td');
            let match = false;

            for (let j = 0; j < rowData.length; j++) {
                if (rowData[j].innerText.toLowerCase().indexOf(input) > -1) {
                    match = true;
                    break;
                }
            }
            if (match) {
                rows[i].style.display = '';
            } else {
                rows[i].style.display = 'none';
            }
        }
    });

// Wait for the document to be fully loaded before executing the script
document.addEventListener('DOMContentLoaded', function () {
    const getDateRangeButton = document.getElementById('getDateRangeButton');
    const startDateInput = document.getElementById('startDateDropdownForm');
    const endDateInput = document.getElementById('endDateDropdownForm');

    // Add event listener to the "Get Date Range" button
    getDateRangeButton.addEventListener('click', function (event) {
        event.preventDefault(); // Prevent form submission

        // Get start and end dates from inputs
        const startDate = new Date(startDateInput.value);
        const endDate = new Date(endDateInput.value);

        // Get all table rows except the header row
        const rows = document.querySelectorAll('#tableBody tr');

        rows.forEach((row) => {
            // Assuming transaction date is in the first td element
            const transactionDateCell = row.getElementsByTagName('td')[1];
            if (transactionDateCell) {
                const transactionDate = new Date(transactionDateCell.textContent);

                // Check if the transaction date falls within the range
                if (startDate <= transactionDate && transactionDate <= endDate) {
                    row.style.display = ''; // Show row
                } else {
                    row.style.display = 'none'; // Hide row
                }
            }
        });
    });
});
</script>
<script src="~/js/filter.js"></script>

@*Modal for denying a journal entry*@
<div class="modal fade" id="denyModal" tabindex="-1" aria-labelledby="denyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="denyModalLabel">New message</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="reason-text" class="col-form-label">Reason of denial:</label>
                        <textarea class="form-control" id="reason-text" rows="10"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Confirm denial</button>
            </div>
        </div>
    </div>
</div>

@*Script for populatig denial modal text for a certain journal entry button clicked*@
<script>
    const denyModal = document.getElementById('denyModal')
    if (denyModal) {
        denyModal.addEventListener('show.bs.modal', event => {
            
            
            // Button that triggered the modal
            const button = event.relatedTarget
            // Extract info from data-bs-* attributes
            const journalId = button.getAttribute('data-bs-journalid')
            const journalDesc = button.getAttribute('data-bs-journaldesc')
            const screenName = @currentUser.ScreenName
            // If necessary, you could initiate an Ajax request here
            // and then do the updating in a callback.

            // Update the modal's content.
            const modalTitle = denyModal.querySelector('.modal-title')
            const modalBodyInput = denyModal.querySelector('.modal-body input')


            if (journalDesc == "") {
                modalTitle.textContent = `Denial of jounral entry: ID ${journalId}`
            } else {
                modalTitle.textContent = `Denial of jounral entry: ID ${journalId}: ${journalDesc}`
            }
        })
    }
</script>