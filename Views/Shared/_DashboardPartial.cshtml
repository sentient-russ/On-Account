@model oa.Models.DashboardBundleModel

@* Chart grid layout in a partial view *@
@* 
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css"> *@

<div class="dash-container text-center">
    <div class="row">
        <div class="col">
            <div class="card-container">
                <div class="card-header">
                    <div class="card-header-text">Current Ratio</div>
                </div>     
                <div class="card-body" id="curRatio">
                    @{
                        decimal? curAssets = Model.currentRaitoModel.current_assets_balance;
                        decimal? curLiabilities = Model.currentRaitoModel.current_liabilities_balance;
                        double currentRatio = 0.0;
                        if(curLiabilities == 0) { } else { currentRatio = (double)((curAssets / curLiabilities) * 100); }
                        string currentRatioString = String.Format("{0:0.##}%", currentRatio);

                        if (currentRatio < (1.75*100))
                        {
                            <script>
                                document.getElementById('curRatio').classList.add('danger-subtle')
                            </script>
                        }
                        else if (currentRatio >= (1.75*100) && currentRatio <= (2.25*100))
                        {
                            <script>
                                document.getElementById('curRatio').classList.add('warning-subtle')
                            </script>
                        }
                        else
                        {
                            <script>
                                document.getElementById('curRatio').classList.add('success-subtle')
                            </script>
                        }
                    }
                
                    <span class="card-text">@currentRatioString</span>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card-container">
                <div class="card-header">
                    <div class="card-header-text">Return on Assets</div>
                </div>
                <div class="card-body" id="retOnAssets">
                    @{
                        decimal? revenue0 = Model.returnOnAssetsModel.revenues_balance;
                        decimal? expenses0 = Model.returnOnAssetsModel.expenses_balance;
                        decimal? assets0 = Model.returnOnAssetsModel.assets_balance;
                        double returnOnAssets = 0.0;
                        if (assets0 == 0) { } else { returnOnAssets = (double)(((revenue0 - expenses0) / assets0) * 100); }
                        string returnOnAssetsString = String.Format("{0:0.##}%", returnOnAssets);
                        Console.WriteLine("ReturnOnAssets Ratio: " + returnOnAssets);

                        if (returnOnAssets < (0.05 * 100))
                        {
                            <script>
                                document.getElementById('retOnAssets').classList.add('danger-subtle')
                            </script>
                        }
                        else if (returnOnAssets >= (0.05 * 100) && returnOnAssets <= (0.20 * 100))
                        {
                            <script>
                                document.getElementById('retOnAssets').classList.add('warning-subtle')
                            </script>
                        }
                        else
                        {
                            <script>
                                document.getElementById('retOnAssets').classList.add('success-subtle')
                            </script>
                        }
                    }

                    <span class="card-text">@returnOnAssetsString</span>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card-container">
                <div class="card-header">
                    <div class="card-header-text">Return on Equity</div>
                </div>
                <div class="card-body" id="retOnEquity">
                    @{
                        decimal? equity0 = Model.returnOnEquityModel.equity_balance;
                        double returnOnEquity = 0.0;
                        if (equity0 == 0) { } else { returnOnEquity = (double)(((revenue0 - expenses0) / equity0) * 100); }
                        string returnOnEquityString = String.Format("{0:0.##}%", returnOnEquity);
                        Console.WriteLine("ReturnOnEquity Ratio: " + returnOnEquity);

                        if (returnOnEquity < (0.10 * 100))
                        {
                            <script>
                                document.getElementById('retOnEquity').classList.add('danger-subtle')
                            </script>
                        }
                        else if (returnOnEquity >= (0.10 * 100) && returnOnEquity <= (0.15 * 100))
                        {
                            <script>
                                document.getElementById('retOnEquity').classList.add('warning-subtle')
                            </script>
                        }
                        else
                        {
                            <script>
                                document.getElementById('retOnEquity').classList.add('success-subtle')
                            </script>
                        }
                    }

                    <span class="card-text">@returnOnEquityString</span>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card-container">
                <div class="card-header">
                    <div class="card-header-text">Net Profit Margin</div>
                </div>
                <div class="card-body" id="netProfMargin">
                    @{

                        double netProfitMargin = 0.0;
                        if (revenue0 == 0) { } else {netProfitMargin = (double)(((revenue0 - expenses0) / revenue0) * 100); }                        
                        string netProfitMarginString = String.Format("{0:0.##}%", netProfitMargin);
                        Console.WriteLine("NetProfitMargin Ratio: " + netProfitMargin);

                        if (netProfitMargin < (0.10 * 100))
                        {
                            <script>
                                document.getElementById('netProfMargin').classList.add('danger-subtle')
                            </script>
                        }
                        else if (netProfitMargin >= (0.10 * 100) && netProfitMargin <= (0.20 * 100))
                        {
                            <script>
                                document.getElementById('netProfMargin').classList.add('warning-subtle')
                            </script>
                        }
                        else
                        {
                            <script>
                                document.getElementById('netProfMargin').classList.add('success-subtle')
                            </script>
                        }
                    }

                    <span class="card-text">@netProfitMarginString</span>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card-container">
                <div class="card-header">
                    <div class="card-header-text">Asset Turnover</div>
                </div>
                <div class="card-body" id="assetTurnover">
                     @{
                        double assetTurnover = 0.0;
                        if (assets0 == 0) { } else { assetTurnover = (double)((revenue0 / assets0) * 100); }
                        string assetTurnoverString = String.Format("{0:0.##}%", assetTurnover);
                        Console.WriteLine("AssetTurnover Ratio: " + assetTurnover);

                        if (assetTurnover < (.15 * 100))
                        {
                            <script>
                                document.getElementById('assetTurnover').classList.add('danger-subtle')
                            </script>
                        }
                        else if (assetTurnover >= (.15 * 100) && assetTurnover <= (.25 * 100))
                        {
                            <script>
                                document.getElementById('assetTurnover').classList.add('warning-subtle')
                            </script>
                        }
                        else
                        {
                            <script>
                                document.getElementById('assetTurnover').classList.add('success-subtle')
                            </script>
                        }
                    }

                    <span class="card-text">@assetTurnoverString</span>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card-container">
                <div class="card-header">
                    <div class="card-header-text"> Quick Ratio</div>
                </div>
                <div class="card-body" id="quickRatio">
                    @{
                        decimal? inventory0 = Model.quickRatioModel.inventory_balance;
                        double quickRatio = 0.0;
                        if (curLiabilities == 0) { } else { quickRatio = (double)(((curAssets - inventory0) / curLiabilities) * 100); }
                        string quickRatioString = String.Format("{0:0.##}%", quickRatio);
                        Console.WriteLine("Quick Ratio: " + quickRatio);

                        if (quickRatio < (0.9 * 100))
                        {
                            <script>
                                document.getElementById('quickRatio').classList.add('danger-subtle')
                            </script>
                        }
                        else if (quickRatio >= (0.9 * 100) && quickRatio <= (1.2 * 100))
                        {
                            <script>
                                document.getElementById('quickRatio').classList.add('warning-subtle')
                            </script>
                        }
                        else
                        {
                            <script>
                                document.getElementById('quickRatio').classList.add('success-subtle')
                            </script>
                        }
                    }

                    <span class="card-text">@quickRatioString</span>
                </div>
            </div>
        </div>
    </div>
</div>
